name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main
      - beta
      - release-*
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for PRs
  pull_request:
    branches:
      - main
      - beta
      - release-*
env:
  VAULT_ADDR: https://vault.eng.aserto.com/
  PRE_RELEASE: ${{ github.ref == 'refs/heads/main' && 'development' || '' }}
  DOCKER_IMAGE: "ghcr.io/aserto-dev/authzen-topaz-proxy"

jobs:
  push:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_VERSION: ${{ steps.calc_tags.outputs.version }}
    # when on a branch only push if the branch is main
    # always push when ref is a tag
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta' || startsWith(github.ref, 'refs/tags/v') )
    steps:
      - name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: https://vault.eng.aserto.com/
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github                  "USERNAME"            | DOCKER_USERNAME;
            kv/data/github                  "DOCKER_PUSH_TOKEN"   | DOCKER_PASSWORD;
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: https://ghcr.io
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Calculate Tags
        id: "calc_tags"
        uses: aserto-dev/sver-action@v0.0.13
        with:
          docker_image: "aserto-dev/authzen-topaz-proxy"
          docker_registry: "https://ghcr.io"
          docker_username: ${{ env.DOCKER_USERNAME }}
          docker_password: ${{ env.DOCKER_PASSWORD }}
      - name: Build Image
        run: |
          docker build -t "${{ env.DOCKER_IMAGE }}" .
      - name: Push image to GitHub Container Registry
        run: |
          echo "${{ steps.calc_tags.outputs.version }}" | \
            xargs -I{} bash -c "docker tag '${{ env.DOCKER_IMAGE }}' '${{ env.DOCKER_IMAGE }}:{}' && docker push '${{ env.DOCKER_IMAGE }}:{}'"

  trigger-cd:
    runs-on: ubuntu-latest
    needs: push
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    steps:
      - name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: https://vault.eng.aserto.com/
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "ROOT_TOKEN"     | ROOT_TOKEN;
      - name: Trigger CD workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: cd
          token: ${{ env.ROOT_TOKEN }}
          inputs: '{"image_version": "${{ needs.push.outputs.IMAGE_VERSION }}"}'


  release:
    needs: push
    runs-on: ubuntu-latest
    # Only release when ref is a tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: https://vault.eng.aserto.com/
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "SSH_PRIVATE_KEY"     | SSH_PRIVATE_KEY;
            kv/data/github  "READ_WRITE_TOKEN"    | READ_WRITE_TOKEN;
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          # A PAT is required to work around
          # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          GITHUB_TOKEN: ${{ steps.vault.outputs.READ_WRITE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
